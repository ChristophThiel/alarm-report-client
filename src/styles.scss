@use '~@angular/material' as mat;
@include mat.core();

$primary: mat.define-palette(mat.$blue-gray-palette, 800);
$accent: mat.define-palette(mat.$teal-palette);
$error: mat.define-palette(mat.$red-palette, A700);

$background: #FAFAFA;

$theme: mat.define-light-theme($primary, $accent, $error);

@include mat.all-component-themes($theme);

html, body {
  height: 100%;
  overflow: hidden;
}

body { 
  background-color: $background;
  font-family: Roboto, "Helvetica Neue", sans-serif;
  margin: 0;
}

input::-webkit-clear-button, input::-webkit-inner-spin-button, input::-webkit-outer-spin-button {
  display: none;
}

textarea {
  min-height: 35px !important;
}

textarea::-webkit-inner-spin-button {
  display: none;
}

mat-chip {
  cursor: pointer;
  font-size: 12pt;
  height: auto;
}

mat-divider {
  border-top-color: rgba(0, 0, 0, 0.8) !important;
}

snack-bar-container {
  margin: 16px !important;    
}

.container {
  min-width: 567.2px;
  width: 60vw;
  margin: 16px auto 16px auto;
  overflow: hidden;

  @media screen and (max-width: 599px) {
    min-width: 0;
    max-width: calc(100vw - 32px);
    width: calc(100vw - 32px);
    margin: 16px;
  }
}

.dialog-container {
  width: 40vw !important;
  min-width: 450px !important;

  @media screen and (max-width: 599px) {
    width: 80vw !important;
    min-width: 0 !important;
  }

  p span{
    display: block;
    font-size: 14pt;
    line-break: normal;
    text-align: justify;
  }
}

.fixed-container {
  position: sticky;
  top: 0;
  width: 60vw;
  min-width: 567.2px !important;
  padding-top: 16px;
  margin-left: auto;
  margin-right: auto;
  background-color: $background;
  z-index: 99;

  @media screen and (max-width: 599px) {
    min-width: 0 !important;
    width: 100vw;
    padding: 16px;
  }
}

// 21.5px is the padding of an mat-form-field-wrapper, 8px is the margin of an mat-form-field-wrapper
.form-submit-button {
  margin-top: 4px !important;
  margin-bottom: calc(21.5px + 16px) !important;
  min-height: 59px;
}

.form-submit-button.flawless {
  margin-top: 4px !important;
  margin-bottom: 0 !important
}

.truncate {
  flex: 1;
  min-width: 0;

  p, mat-error, mat-list-item {
    white-space: nowrap;
    overflow: hidden;
    text-overflow: ellipsis;
  }
}

.left {
  ::ng-deep {
      .mat-form-field-outline-end {
          border-radius: 0 !important;
      }
  }
}

.mat-stroked-button.left {
  border-top-right-radius: 0 !important;
  border-bottom-right-radius: 0 !important;
}

.center {
  ::ng-deep {
      .mat-form-field-outline-start, .mat-form-field-outline-end {
          border-radius: 0 !important;
      }
  }
}

.mat-stroked-button.center {
  border-top-left-radius: 0 !important;
  border-top-right-radius: 0 !important;
  border-bottom-left-radius: 0 !important;
  border-bottom-right-radius: 0 !important
}

.right {
  ::ng-deep {
    .mat-form-field-outline-start {
      border-radius: 0 !important;
    }
  }
}

.mat-stroked-button.right {
  border-top-left-radius: 0 !important;
  border-bottom-left-radius: 0 !important;
  height: 57px !important;
}

.is-center {
  input {
    text-align: center;
  }
}

.flawless {
  margin-bottom: 0;
  padding-bottom: 0;
}

::ng-deep {
  .cdk-global-scrollblock {
    position: static;
    width: initial;
    overflow: hidden !important;
  }

  .mat-form-field-wrapper {
    margin-bottom: 16px !important
  }

  .mat-form-field.flawless {
    .mat-form-field-wrapper {
      margin-bottom: 0 !important;
      padding-bottom: 0 !important;
    }
  }

  .mat-stroked-button {
    min-width: 0px !important;
  }

  // If input is of type time then its height will be increased by 5px
  // To fix this behaviour, the mat-form-field must have the class fix-time
  .mat-form-field.fix-time {
    .mat-form-field-wrapper {
      .mat-form-field-flex {
        height: 63px !important;
      }
    }
  }

}